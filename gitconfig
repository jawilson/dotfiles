[user]
	name = Jeffery Wilson
	email = jeff@jeffalwilson.com
[color]
	ui = auto
[core]
	autocrlf = input
[remote-hg]
	hg-git-compat = true
[help]
	autocorrect = 1
[alias]
	co = checkout
	ci = commit -v
	svn-pretty-log = "! f() { git log -n 1000 --graph --color=always --pretty=format:\"%Cred%h%Creset%C(bold yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%Cred%b%Creset\" --date=relative \"$@\" | parse-git-svn-pretty-log | less -FRS; }; f"
	pretty-log = log --graph --pretty=format:'%Cred%h%Creset%C(bold yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev=8 --date=relative
	up = pull --rebase
	diverge  = ![ "$2" ] && HEAD=$2 || HEAD=HEAD && git diff $(git merge-base --octopus $1 $HEAD)..$HEAD
	ldiverge = ![ "$2" ] && HEAD=$2 || HEAD=HEAD && git show $(git merge-base --octopus $1 $HEAD)..$HEAD
	tarball = ![ "$3" ] && NAME=$3 || NAME=$(basename $(git rev-parse --show-toplevel)) && [ "$2" ] && REF=$2 || REF=HEAD && OUTPUT=$1/$NAME-$(git describe $REF | sed 's,^v,,').tar.gz && git archive --prefix=$NAME/ --output=$OUTPUT $REF^{tree} && readlink -m $OUTPUT && true
	cd = !pushd $(git rev-parse --show-toplevel)
	praise = blame
	addnw = !sh -c 'git diff -w --no-color "$@" | git apply --cached --ignore-whitespace' -
	sba = "!f() { [ \"$3\" ] && BRANCH=$3 || BRANCH=main && git subtree add --prefix $2 $1 $BRANCH --squash; }; f"
	sbu = "!f() { [ \"$3\" ] && BRANCH=$3 || BRANCH=main && git subtree pull --prefix $2 $1 $BRANCH --squash; }; f"
	cp = cherry-pick
	cl = clone
	st = status -sb
	br = branch
	unstage = reset HEAD --
	dc = diff --cached
	lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative
[credential]
	helper = cache
[push]
	default = simple
[rerere]
	enabled = 1
	autoSetupRemote = true
[merge]
	tool = vimdiff
[mergetool]
	keepBackup = false
[web]
	browser = chrome
[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
	required = true
